lci <- do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)}))
ld <- bind_rows(lna2, lci) %>% slice_head(n=380)
View(lci)
ld <- bind_rows(0, lci) %>% slice_head(n=380)
ld <- bind_rows(zero, lci) %>% slice_head(n=380)
zero <- data.frame(se = 0)
ld <- bind_rows(zero, lci) %>% slice_head(n=380)
View(ld)
lna2 <- data.frame(se = 0)
lci <- do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)}))
ld <- bind_rows(lna2, lci) %>% slice_head(n=380)
lci <- do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)}))
View(lci)
View(lna2)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)})))
ld <- bind_rows(lna2, lci) %>% slice_head(n=380)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)})))
View(lci)
zero <- data.frame(se = 0)
ld <- bind_rows(zero, lci) %>% slice_head(n=380)
THIg <- bind_rows(THIna2, THIfi) %>% slice_head(n=380)
lc<- data.frame(lb$se)
View(lc)
lbi <- do.call(rbind, apply(llb, 1, function(x) {rbind(x, lna1)}))
View(lbi)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)})))
View(lci)
ld <- bind_rows(lna2, lci) %>% slice_head(n=380)
lna1 <- data.frame(Months = 0)
lb <- data.frame(Months = 1:190, se = 1:190) #%>% mutate(se = replace(se, se !=0, "se"))
llb <- data.frame(lb$Months)
lbi <- do.call(rbind, apply(llb, 1, function(x) {rbind(x, lna1)}))
lc<- data.frame(lb$se)
lna2 <- data.frame(lb.se = 0)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)})))
ld <- bind_rows(lna2, lci) %>% slice_head(n=380)
View(ld)
ld <- bind_rows(lna2, lci) %>% slice_head(n=380) %>% mutate(se = replace(se, se !=0, "se"))
ld <- bind_rows(lna2, lci) %>% slice_head(n=380)# %>% mutate(se = replace(se, se !=0, "se"))
View(ld)
ld <- bind_rows(lna2, lci) %>% slice_head(n=380) %>% rename(se = lb.se) %>% mutate(se = replace(se, se !=0, "se"))
View(ld)
labels1 <- bind_cols(lbi, ld)  %>%  mutate(Months = if_else(row_number() %% 2 == 0, se, Months)) %>% select(Months)
lna1 <- data.frame(Months = 0)
lb <- data.frame(Months = 1:190, se = 1:190)
llb <- data.frame(lb$Months)
lbi <- do.call(rbind, apply(llb, 1, function(x) {rbind(x, lna1)}))
lc<- data.frame(lb$se)
lna2 <- data.frame(lb.se = 1000)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)})))
ld <- bind_rows(lna2, lci) %>% slice_head(n=380) %>% rename(se = lb.se)
labels1 <- bind_cols(lbi, ld)  %>%  mutate(Months = if_else(row_number() %% 2 == 0, se, Months)) %>% select(Months)
View(labels1)
lna1 <- data.frame(Months = 0)
lb <- data.frame(Months = 1:190, se = 1:190)
llb <- data.frame(lb$Months)
lbi <- do.call(rbind, apply(llb, 1, function(x) {rbind(x, lna1)}))
View(lbi)
lc<- data.frame(lb$se)
lna2 <- data.frame(lb.se = 1000)
View(lna2)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)})))
View(lci)
ld <- bind_rows(lna2, lci) %>% slice_head(n=380) %>% rename(se = lb.se)
View(ld)
View(ld)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)})))
View(lci)
lci <- data.frame(do.call(rbind, apply(lc, 1, function(y) {rbind(y, lna2)}))) %>% rename(se = lb.se)
labels1 <- bind_cols(lbi, lci)  %>%  mutate(Months = if_else(row_number() %% 2 == 0, se, Months)) %>% select(Months)
View(lci)
View(labels1)
labels1 <- bind_cols(lbi, lci)  %>%  mutate(Months = if_else(row_number() %% 2 == 0, se, Months)) %>% select(Months) %>% %>% mutate(Months = replace(Months, Months==1000, "se")
Fullvr <- bind_cols(indiavr, lankvr, malvr, mnrvr, pakvr, phlvr, thivr)
Fullvr
}
labels1 <- bind_cols(lbi, lci)  %>%  mutate(Months = if_else(row_number() %% 2 == 0, se, Months)) %>% select(Months) %>% mutate(Months = replace(Months, Months==1000, "se"))
View(labels1)
Fullvr <- bind_cols(labels1,indiavr, lankvr, malvr, mnrvr, pakvr, phlvr, thivr)
Fullvr
View(Fullvr)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
VR <-cvar_table(pdata)
VR <-cvar_table(pdata, 40)
VRtab <- knitr::kable(vtab(VR))
VR <-cvar_table(pdata, 190)
VRtab <- knitr::kable(vtab(VR))
VR <-cvar_table(pdata)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
VR <-cvar_table(pdata)
VRtab <- knitr::kable(vtab(VR))
VRtab <- vtab(VR)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
VR <-cvar_table(pdata)
VRtab <- vtab(VR)
View(VRtab)
VRtab <- vtab(VR) %>% slice_head(n=40)
VRtab <- vtab(VR) %>% slice_head(n=40)
VRtab
View(VRtab)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Loading packages used
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("plm")) install.packages("plm")
library(tidyverse)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
ind <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/ind.dat")
lnk <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/lnk.dat")
mal <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mal.dat")
mnr <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mnr.dat")
pak <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/pak.dat")
phl <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/phl.dat")
thi <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/thi.dat")
# adding in a column to each data set for the real exchange rate
rexIND <- ind %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexIND = real_exchange(INDEX, INDCPI, USCPI)) %>% select(ENTRY, rexIND)
rexLNK <- lnk %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexLNK = real_exchange(LNKEX, LNKCPI, USCPI)) %>% select(rexLNK)
rexMAL <- mal %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexMAL = real_exchange(MALEX, MALCPI, USCPI)) %>% select(rexMAL)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 16.5)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(rexMNR) #replaced the value for the exchange rate for 1974:11 with 16.5 (was 1.45)
rexPAK <- pak %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexPAK = real_exchange(PAKEX, PAKCPI, USCPI)) %>% select(rexPAK)
rexPHL <- phl %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(PHLEX = replace(PHLEX, 213, 7.7)) %>% mutate(rexPHL = real_exchange(PHLEX, PHLCPI, USCPI)) %>% select(rexPHL) #replaced the value for the exchange rate for 1975:09 with 7.7 (was 0.7)
rexTHI <- thi %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexTHI = real_exchange(THIEX, THICPI, USCPI)) %>% select(rexTHI)
# binding the columns together for a panel data set of real exchange rates
pdata <- bind_cols(rexIND,rexLNK, rexMAL, rexMNR,  rexPAK,  rexPHL,  rexTHI)
VR <-cvar_table(bret)
View(VR)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Loading packages used
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("plm")) install.packages("plm")
library(tidyverse)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
ind <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/ind.dat")
lnk <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/lnk.dat")
mal <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mal.dat")
mnr <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mnr.dat")
pak <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/pak.dat")
phl <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/phl.dat")
thi <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/thi.dat")
# adding in a column to each data set for the real exchange rate
rexIND <- ind %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexIND = real_exchange(INDEX, INDCPI, USCPI)) %>% select(ENTRY, rexIND)
rexLNK <- lnk %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexLNK = real_exchange(LNKEX, LNKCPI, USCPI)) %>% select(rexLNK)
rexMAL <- mal %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexMAL = real_exchange(MALEX, MALCPI, USCPI)) %>% select(rexMAL)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 16.5)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(rexMNR) #replaced the value for the exchange rate for 1974:11 with 16.5 (was 1.45)
rexPAK <- pak %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexPAK = real_exchange(PAKEX, PAKCPI, USCPI)) %>% select(rexPAK)
rexPHL <- phl %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(PHLEX = replace(PHLEX, 213, 7.7)) %>% mutate(rexPHL = real_exchange(PHLEX, PHLCPI, USCPI)) %>% select(rexPHL) #replaced the value for the exchange rate for 1975:09 with 7.7 (was 0.7)
rexTHI <- thi %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexTHI = real_exchange(THIEX, THICPI, USCPI)) %>% select(rexTHI)
# binding the columns together for a panel data set of real exchange rates
pdata <- bind_cols(rexIND,rexLNK, rexMAL, rexMNR,  rexPAK,  rexPHL,  rexTHI)
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="tbar")
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="tbar")
A <- purtest(dm, exo = "trend", test = "ips" , ips.stat ="tbar")
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
View(A)
A
View(pdata)
dm <- pdata %>% select(-ENTRY) %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
View(dm)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Wbar")
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Wtbar")
A
A <- tidy_stats(purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar"))
library(tidystats)
A <- tidy_stats(purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar"))
A <- data.frame((purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")))
A
View(A)
pdata2 <- pdata %>% select(-ENTRY)
View(pdata2)
dm <-  pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
A$statistic
C <- A$statistic
View(C)
C <- tidy_stats(A$statistic)
View(C)
C <- tidy_stats_to_data_frame(tidy_stats(A$statistic))
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
C <- tidy_stats_to_data_frame(tidy_stats(A$statistic))
C <- tidy_stats(A$statistic)
D <- tidy_stats_to_data_frame(C)
C <- data.frame(tidy_stats(A$statistic))
View(C)
C <- data.frame(tidy_stats(A$statistic)) %>% rename(t-statistic = statistics.statistic.value)
C <- data.frame(tidy_stats(A$statistic)) %>% rename("t-statistic" = statistics.statistic.value)
View(C)
C <- data.frame(tidy_stats(A$statistic)) %>% rename("t-statistic" = statistics.statistic.value) %>% rename(Method = method) %>% select(Method, "t-statistic")
View(C)
C <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(method, replace(method, method != 0, "IPS")) %>% rename(Method = method) %>% select(Method, "T-statistic")
View(C)
C <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(method, replace(method, method != 0, "IPS")) %>% rename(Method = method) %>% select(Method, "T-statistic")
View(C)
C <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(method, replace(method, is_character(method), "IPS")) %>% rename(Method = method) %>% select(Method, "T-statistic")
View(C)
C <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(method, replace(method, is_character(method), "IPS")) %>% rename(Method = method) %>% select(Method, "T-statistic")
View(C)
C <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>%  select(Test, "T-statistic")
View(C)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Outcome)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Outcome)
View(B)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <-
)
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
table <- bind_rows(B,D)
View(table)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
View(A)
A
B <- data.frame(tidy_stats(A$statistic, A$statistic$ips.tbar.crit))
B <- data.frame(tidy_stats(A$statistic), tidy_stats(A$statistic$ips.tbar.crit))
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
g <- A$statistic$ips.tbar.crit)
g <- A$statistic$ips.tbar.crit
g
g <- data.frame(A$statistic$ips.tbar.crit)
g
View(g)
g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.crit)
View(g)
g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit)
View(g)
g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "2%", "3%") %>% select("Significance Level", "Critical Value")
g
A
B <- data.frame(tidy_stats(A$statistic, A$statistic$ips.tbar.crit)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
B <- data.frame(tidy_stats(A$statistic), tidy_stats(A$statistic$ips.tbar.crit))
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
B <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Wtbar")
B
table <- bind_rows(B,D)
}
g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "2%", "3%") %>% select("Significance Level", "Critical Value")
g
A
B <- data.frame(tidy_stats(A$statistic, A$statistic$ips.tbar.crit)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
B <- data.frame(tidy_stats(A$statistic), tidy_stats(A$statistic$ips.tbar.crit))
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
B <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Wtbar")
B
table <- bind_rows(B,D)
}
g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "2%", "3%")) %>% select("Significance Level", "Critical Value")
g
B <- data.frame(tidy_stats(A$statistic, A$statistic$ips.tbar.crit)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
B <- data.frame(tidy_stats(A$statistic) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
B <- data.frame(tidy_stats(A$statistic), tidy_stats(A$statistic$ips.tbar.crit))
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
B <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Wtbar")
B
table <- bind_rows(B,D)
}
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
View(B)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
#g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "5%", "10%")) %>% select("Significance Level", "Critical Value") %>%
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
table <- bind_rows(B,D)
View(table)
pdata2 <- pdata %>% select(-ENTRY)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
ip <- ips(dm)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
pdata2 <- pdata %>% select(-ENTRY)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
ip <- ips(dm)
View(ip)
ip <- knitr::kable(ips(dm))
A <- purtest(dm, exo = "trend", test = "levinlin" , lags = "AIC", pmax=10)
i
A
summary(A)
IPS <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 5)
summary(IPS)
IPS <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 5)
summary(IPS)
ip <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 5)
summary(ip)
ip <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 10)
summary(ip)
library(punitroots)
install.packages("punitroots")
library(punitroots)
lev <- purtest(dm, exo = "trend", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
lev <- data.frame(summary(lev))
lev <- data.frame(tidy_stats(summary(lev))
IPS <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 5)
ip <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 10)
summary(ip)
#g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "5%", "10%")) %>% select("Significance Level", "Critical Value") %>%
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
table <- bind_rows(B,D)
table
}
lev <- data.frame(tidy_stats(summary(lev)))
lev <- data.frame(tidy_stats(lev))
lev <- data.frame(tidy_stats(lev$statistic))
View(lev)
lev <- purtest(dm, exo = "trend", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
lev <- purtest(dm, exo = "intercept", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
mad <- purtest(dm, exo = "intercept", test = "madwu" , lags = "AIC", pmax=10)
summary(mad)
mad1 <- purtest(dm, exo = "trend", test = "madwu" , lags = "AIC", pmax=10)
summary(mad1)
lev <- purtest(pdata2, exo = "intercept", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
lev1 <- purtest(pdata2, exo = "intercept", test = "levinlin" , lags = "AIC", pmax=10)
lev1 <- purtest(pdata2, exo = "trend", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
had <- purtest(pdata2, exo = "intercept", test = "hadri", lags = "AIC", pmax=10)
summary(had)
had <- purtest(pdata2, exo = "intercept", test = "hadri")
summary(had)
had1 <- purtest(pdata2, exo = "trend", test = "hadri")
summary(had)
had1 <- purtest(pdata2, exo = "trend", test = "hadri")
summary(had1)
choi <- purtest(pdata2, exo = "intercept", test = "pm", lags = "AIC", pmax=10)
summary(choi)
choi <- purtest(pdata2, exo = "intercept", test = "Pm", lags = "AIC", pmax=10)
summary(choi)
choi1 <- purtest(pdata2, exo = "trend", test = "Pm", lags = "AIC", pmax=10)
summary(choi1)
install.packages("bootUR")
library(tidyverse)
library(plm)
library (tseries)
library(tidystats)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
#g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "5%", "10%")) %>% select("Significance Level", "Critical Value") %>%
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- dat
table <- bind_rows(B,D)
table
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, ips.stat ="tbar")
#g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "5%", "10%")) %>% select("Significance Level", "Critical Value") %>%
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
View(B)
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
View(D)
table <- bind_rows(B,D)
table
library(xtable)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
ip <- ips(dm)
#g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "5%", "10%")) %>% select("Significance Level", "Critical Value") %>%
B <- data.frame(A$statistic) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
library(xtable)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
ip <- ips(dm)
pdata2 <- pdata %>% select(-ENTRY)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
library(xtable)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
ip <- ips(dm)
install.packages('PANICr')
library(PANICr)
library(bootUR)
??bootUR
help(bootUR)
help("bootUR")
install.packages('PANICr')
library(bootUR)
panel_out <- paneltest(pdata2, boot = "MBB", B = 399, verbose = TRUE)
panel_out
panel_out
view(panel_out)
panelout <- paneltest(pdata2, boot = "MBB", B = 399, verbose = TRUE)
view(panelout)
summarise(panelout)
rm <- data.frame(tidy_stats(panelout))
view(rm)
lev <- purtest(pdata2, exo = "intercept", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
library(bootUR)
panelout <- paneltest(pdata2, boot = "MBB", B = 399, verbose = TRUE) # Palm, Smeekes and Urbain (2011) introduced this test with the moving block bootstrap
panelout1 <- panel_test(dm, boot = "MBB", B = 399, verbose = TRUE)
panelout1 <- panel_test(dm, boot = "MBB", B = 399, verbose = TRUE)
panelout1 <- paneltest(dm, boot = "MBB", B = 399, verbose = TRUE)
install.packages("~/GitHub/metrics/packages/PANICr_1.0.0.tar.gz", repos = NULL, type = "source")
palm <- bind_rows(panelout, panelout1)
panelout <- paneltest(pdata2, boot = "MBB", B = 399, verbose = TRUE) # Palm, Smeekes and Urbain (2011) introduced this test with the moving block bootstrap
View(panelout)
View(panelout)
rm <- data.frame(tidy_stats(panelout))
View(panelout)
typeof(panelout)
palm <- bind_rows(panelout, panelout1)
rm <- data.frame(panelout)
view(rm)
panelout1 <- data.frame(paneltest(dm, boot = "MBB", B = 399, verbose = TRUE))
palm <- data.frame(bind_rows(panelout, panelout1))
dm1 <- data.frame(panelout1)
palm <- data.frame(bind_rows(rm, dm1))
View(palm)
palm <- data.frame(bind_rows(rm, dm1)) %>% rename("Test Statistic" = "test.statistic", "p Value" = p.value)
View(palm)
palm <- data.frame(bind_rows(rm, dm1)) %>% rename("Test Statistic" = "test.statistic", "p Value" = p.value) %>% mutate(Test = c("Panel", "Panel Demeaned")
# purtest(object, test = c("levinlin", "ips", "madwu", "hadri"),
#         exo = c("none", "intercept", "trend"),
#         lags = c("SIC", "AIC", "Hall"), pmax = 10)
lev <- purtest(pdata2, exo = "intercept", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
lev <- data.frame(tidy_stats(lev$statistic))
lev1 <- purtest(pdata2, exo = "trend", test = "levinlin" , lags = "AIC", pmax=10)
summary(lev)
lev1 <- data.frame(tidy_stats(lev$statistic))
mad <- purtest(dm, exo = "intercept", test = "madwu" , lags = "AIC", pmax=10)
summary(mad)
mad1 <- purtest(dm, exo = "trend", test = "madwu" , lags = "AIC", pmax=10)
summary(mad1)
had <- purtest(pdata2, exo = "intercept", test = "hadri")
summary(had)
had1 <- purtest(pdata2, exo = "trend", test = "hadri")
summary(had1)
had <- purtest(pdata2, exo = "intercept", test = "hadri")
summary(had)
had1 <- purtest(pdata2, exo = "trend", test = "hadri")
summary(had1)
choi <- purtest(pdata2, exo = "intercept", test = "Pm", lags = "AIC", pmax=10)
summary(choi)
choi1 <- purtest(pdata2, exo = "trend", test = "Pm", lags = "AIC", pmax=10)
summary(choi1)
lev <- data.frame(tidy_stats(lev$statistic))
had1 <- purtest(pdata2, exo = "trend", test = "levinlin" , lags = "AIC", pmax=10)
summary(had1)
lev1 <- data.frame(tidy_stats(lev$statistic))
lev <- data.frame(tidy_stats(lev$statistic))
IPS <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 5)
ip <- purtest(dm, test = "ips", exo = "intercept", lags = "AIC", pmax = 10)
summary(ip)
#g <- data.frame(A$statistic$ips.tbar.crit) %>% rename("Critical Value" = A.statistic.ips.tbar.crit) %>% mutate("Significance Level" = c("1%", "5%", "10%")) %>% select("Significance Level", "Critical Value") %>%
B <- data.frame(tidy_stats(A$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "Yes") %>% mutate(Outcome = "Reject H0") %>%  select(Test, "T-statistic", Trend, Outcome)
C <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, ips.stat ="tbar")
D <- data.frame(tidy_stats(C$statistic)) %>% rename("T-statistic" = statistics.statistic.value) %>% mutate(Test = "IPS") %>% mutate(Trend = "No") %>% mutate(Outcome = "Reject H0") %>% select(Test, "T-statistic", Trend, Outcome)
table <- bind_rows(B,D)
table
}
palm <- data.frame(bind_rows(rm, dm1)) %>% rename("Test Statistic" = "test.statistic", "p Value" = p.value) %>% mutate(Test = c("Panel", "Panel Demeaned"))
View(palm)
palm <- data.frame(bind_rows(rm, dm1)) %>% rename("Test Statistic" = "test.statistic", "p Value" = p.value) %>% mutate(Test = c("Panel", "Panel Demeaned")) %>% select(Test, "Test Statistic", "p Value")
View(palm)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
#install.packages("bootUR")
library(bootUR)
panelout <- paneltest(pdata2, boot = "MBB", B = 399, verbose = TRUE) # Palm, Smeekes and Urbain (2011) introduced this test with the moving block bootstrap
panelout1 <- paneltest(dm, boot = "MBB", B = 399, verbose = TRUE)
dm1 <- panelout1
palm <- data.frame(bind_rows(rm, dm1)) %>% rename("Test Statistic" = "test.statistic", "p Value" = p.value) %>% mutate(Test = c("Panel", "Panel Demeaned")) %>% select(Test, "Test Statistic", "p Value")
# typeof(panelout)
view(palm)
pdata2 <- pdata %>% select(-ENTRY)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
library(xtable)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
palm <- panel_test_table(pdata2)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
# Loading packages used
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("plm")) install.packages("plm")
library(bootUR)
library(tidyverse)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
ind <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/ind.dat")
lnk <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/lnk.dat")
mal <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mal.dat")
mnr <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mnr.dat")
pak <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/pak.dat")
phl <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/phl.dat")
thi <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/thi.dat")
# adding in a column to each data set for the real exchange rate
rexIND <- ind %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexIND = real_exchange(INDEX, INDCPI, USCPI)) %>% select(ENTRY, rexIND)
rexLNK <- lnk %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexLNK = real_exchange(LNKEX, LNKCPI, USCPI)) %>% select(rexLNK)
rexMAL <- mal %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexMAL = real_exchange(MALEX, MALCPI, USCPI)) %>% select(rexMAL)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 16.5)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(rexMNR) #replaced the value for the exchange rate for 1974:11 with 16.5 (was 1.45)
rexPAK <- pak %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexPAK = real_exchange(PAKEX, PAKCPI, USCPI)) %>% select(rexPAK)
rexPHL <- phl %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(PHLEX = replace(PHLEX, 213, 7.7)) %>% mutate(rexPHL = real_exchange(PHLEX, PHLCPI, USCPI)) %>% select(rexPHL) #replaced the value for the exchange rate for 1975:09 with 7.7 (was 0.7)
rexTHI <- thi %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexTHI = real_exchange(THIEX, THICPI, USCPI)) %>% select(rexTHI)
# binding the columns together for a panel data set of real exchange rates
pdata <- bind_cols(rexIND,rexLNK, rexMAL, rexMNR,  rexPAK,  rexPHL,  rexTHI)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
ip <- ips(dm)
