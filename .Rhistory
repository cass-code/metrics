View(pdata1)
View(pdata2)
View(pdata3)
cips <- cipstest(
pdata3,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE,
)
View(pdata3)
cips <- cipstest(
pdata3,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE,
)
cips <- cipstest(
pdata3,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
View(pdata1)
View(pdata)
cips <- cipstest(
pdata,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pdata$index <- 1:nrow(pdata)
View(pdata)
pdata <- pdata %>% select(-index)
View(pdata)
index <- 1:nrow(pdata)
index <- col(1:nrow(pdata))
index <- data.frame("index" = c(1:nrow(pdata))
index <- data.frame("index" = c(1:nrow(pdata)))
index <- data.frame(index = c(1:nrow(pdata)))
View(index)
pseries <- bind_cols(index, pdata)
View(pseries)
dat <- pdata %>% select(-ENTRY)
pseries <- bind_cols(index, dat)
View(pseries)
cips <- cipstest(
pseries,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pseries <- pdata.frame(pseries)
View(pseries)
pseries <- pdata.frame(dat)
View(pseries)
p <- pseries$rexIND
cips <- cipstest(
p,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
pseries,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
library(tidyverse)
library(tseries)
adfInd <- adf.test(pdata$rexIND, alternative = "stationary", k=0)
adfInd #Indian Rupee
adfLNK <- adf.test(pdata$rexLNK, alternative = "stationary", k=0)
adfLNK
adfMAL <- adf.test(pdata$rexMAL, alternative = "stationary", k=2)
adfMAL # Ringgit
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(ENTRY)
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
view(pdata1)
pdata2 <- pdata %>% select(-ENTRY)
view(pdata2)
pdata3 <- pdata1 %>% select(-ENTRY, -Country)
view(pdata3)
A <- ADF(pdata, 8)
A
View(pdata2)
A <- purtest(pdata2, exo = "intercept", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
View(pdata2)
View(pdata)
View(pdata1)
dm <- pdata2 %>% mutate(rowMeans(pdata2))
View(dm)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2))
View(dm)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% replace(pdata2 == pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% replace(pdata2, pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(pdata2, pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(pdata2, pdata2 = pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(pdata2 = pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(rexIND = rexIND - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
A <- purtest(dm, exo = "intercept", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
cips <- cipstest(
dm,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips
pseries <- pdata.frame(dm)
p <- pseries$rexIND
cips <- cipstest(
dm,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pseries <- bind_cols(index, dm)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = "AIC", pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
A <- purtest(pdata, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A <- purtest(pdata2, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
View(pdata)
View(pdata1)
pseries <- pdata.frame(pdata1)
pseries <- pdata.frame(pdata1, index = c("ENTRY", "Country"), drop.index = TRUE, row.names=TRUE)
View(pseries)
head(attr(pseries, "index"))
p <- head(attr(pseries, "index"))
View(p)
p <- pseries$rex
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
View(pseries)
# pseries <- bind_cols(index, dm)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
View(pseries)
p <- pseries$rex
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips
cips <- cipstest(
p,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
pseries,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
View(pdata2)
cips <- cipstest(
p,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = TRUE
)
cips <- cipstest(
p,
lags = 1,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 1,
type = "none",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
A <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
View(ADFF)
View(FullADF)
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "tbar")
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10)
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10)
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "Ztbar")
A
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "Ztbar")
A
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "tbar")
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "Wtbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Wtbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Ztbar")
A
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
library(tidyverse)
??adf.test
adf.test(dm, 0)
library (tseries)
library (tseries)
adf.test(dm, 0)
View(dm)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
library(tidyverse)
library(tidyverse)
library (tseries)
library(plm)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
library(tidyverse)
library(plm)
library (tseries)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
D <- DF(dm)
D <- DF(dm)
D
View(D)
DF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic) %>% summarise(mean(DF))
DF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic)
DF
View(DF)
DF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic) %>%  mutate(summarise(., mean(Dickey-Fuller)))
average <- mean(DF$`Dickey-Fuller`)
average
View(DF)
adfTHI <- adf.test(dm$rexTHI, alternative = "stationary", k=0)
adfTHI #Thailand Baht
adfPHL <- adf.test(dm$rexPHL, alternative = "stationary", k=0)
adfPHL #Phillipine peso
average
??cips
library(tidyverse)
library(plm)
library (tseries)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
#dickey fuller test with average t stats
D <- DF(dm)
D
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Ztbar")
A
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
adf.test(dm, 0)
# pseries <- bind_cols(index, dm)
#pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"))
p <- pseries$rex
p
cips <- cipstest(
p,
lags = 1,
type = "none",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
p,
data("Produc", package = "plm")
Produc <- pdata.frame(Produc, index=c("state", "year"))
View(Produc)
cipstest(Produc$gsp, type = "trend")
# pseries <- bind_cols(index, dm)
#pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"))
View(pseries)
dar <- data("Produc", package = "plm")
dar
# pseries <- bind_cols(index, dm)
#pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"))
View(pseries)
View(Produc)
View(pdata1)
# pseries <- bind_cols(index, dm)
#pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"))
cips <- cipstest(
pseries$rex,
lags = 1,
type = "none",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
View(pseries)
pseries$rex
p <- pseries$rex
p
pdata.frame(p)
View(Produc)
View(pdata1)
View(pdata1)
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
View(pdata1)
View(pdata)
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
View(pdata1)
pdata1$Country <- as.factor(pdata1$Country)
View(pdata1)
# pseries <- bind_cols(index, dm)
#pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"))
p <- pseries$rex
p
cips <- cipstest(
pseries$rex,
lags = 1,
type = "none",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
pseries$rex,
lags = 1,
type = "none",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 1,
type = "none",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
View(Produc)
pdata1$ENTRY <- as.numeric(pdata1$ENTRY)
View(pdata1)
# pseries <- bind_cols(index, dm)
#pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"))
p <- pseries$rex
cipstest(pseries$rex, type = "trend")
pdata1$ENTRY <- as.character(pdata1$ENTRY)
View(pdata1)
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
View(pdata1)
pdata1$ENTRY <- as.character(pdata1$ENTRY)
View(pdata1)
pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), ""))
pdata1$ENTRY <- as.variable(pdata1$ENTRY)
pdata1$ENTRY <- as.Date(pdata1$ENTRY)
pdata1$ENTRY <- as.tibble(pdata1$ENTRY)
pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), ""))
View(pdata1)
pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), ""))
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), ""))
View(pdata1)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), "0"))
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
#%>% mutate(ENTRY = replace(ENTRY, ENTRY grepl(":"), )   mutate(x1 = replace(x1, x1 == 2, 99))
pdata1$Country <- as.factor(pdata1$Country)
pdata1$ENTRY <- as.tibble(pdata1$ENTRY)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), "0"))
View(pdata1)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), "0"))
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), "0"))
View(pdata1)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(':', .), "="))
View(pdata1)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate(grepl(':',.), ~replace(., grepl(':', .), "="))
pdata1$ENTRY <- pdata1$ENTRY %>% mutate(grepl(':',.), ~replace(., grepl(":", .), "0"))
pdata1$ENTRY <- as.tibble(pdata1$ENTRY)
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
pdata1$ENTRY <- as.tibble(pdata1$ENTRY)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate(grepl(':',.), ~replace(., grepl(":", .), "0"))
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(":", .), "0"))
View(pdata1)
pdata1$ENTRY <- as.factor(pdata1$ENTRY)
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
#%>% mutate(ENTRY = replace(ENTRY, ENTRY grepl(":"), )   mutate(x1 = replace(x1, x1 == 2, 99))
pdata1$Country <- as.factor(pdata1$Country)
pdata1$ENTRY <- as.factor(pdata1$ENTRY)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(":", .), "0"))
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
#%>% mutate(ENTRY = replace(ENTRY, ENTRY grepl(":"), )   mutate(x1 = replace(x1, x1 == 2, 99))
pdata1$Country <- as.factor(pdata1$Country)
pdata1$ENTRY <- as.string(pdata1$ENTRY)
pdata1$ENTRY <- as.character(pdata1$ENTRY)
pdata1$ENTRY <- pdata1$ENTRY %>% mutate_if(grepl(':',.), ~replace(., grepl(":", .), "0"))
