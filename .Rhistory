adfPHL <- adf.test(pdata$rexPHL, alternative = "stationary", k=4)
adfPHL #Phillipine peso
adfTHI <- adf.test(pdata$rexTHI, alternative = "stationary", k=1)
adfTHI #Thailand Baht
FullADF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic)
View(FullADF)
names <- col("India", "Sri Lanka", "Malaysia", "Myanmar", "Pakistan", "Phillipines", "Thailand")
FullADF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic) %>% bind_cols(.,names)
source('~/GitHub/metrics/code/ADF.R', echo=TRUE)
source('~/GitHub/metrics/code/ADF.R', echo=TRUE)
names <- data.frame("countries" = c("India", "Sri Lanka", "Malaysia", "Myanmar", "Pakistan", "Phillipines", "Thailand"))
View(names)
ADFF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic)
FullADF <- bind_cols(ADFF, names)
View(FullADF)
FullADF <- bind_cols(names, ADFF)
View(FullADF)
names <- data.frame("countries" = c("India Rupee", "Sri Lanka Rupee", "Malaysia Ringgit", "Myanmar Kyat", "Pakistan Rupee", "Phillipines Peso", "Thailand Baht"))
ADFF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic)
FullADF <- bind_cols(names, ADFF)
library(tidyverse)
library(tseries)
#Augmented Dickey-Fuller test for panel data
library(tseries)
adfInd <- adf.test(pdata$rexIND, alternative = "stationary", k=0)
adfInd #Indian Rupee
adfLNK <- adf.test(pdata$rexLNK, alternative = "stationary", k=0)
adfLNK #Sri Lanka Rupee
adfMAL <- adf.test(pdata$rexMAL, alternative = "stationary", k=2)
adfMAL # Malaysian Ringgit
adfMNR <- adf.test(pdata$rexMNR, alternative = "stationary", k=2)
adfMNR #Myanmar Kyat
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK$statistic #Pakistani rupee
adfPHL <- adf.test(pdata$rexPHL, alternative = "stationary", k=4)
adfPHL #Phillipine peso
adfTHI <- adf.test(pdata$rexTHI, alternative = "stationary", k=1)
adfTHI #Thailand Baht
names <- data.frame("countries" = c("India Rupee", "Sri Lanka Rupee", "Malaysia Ringgit", "Myanmar Kyat", "Pakistan Rupee", "Phillipines Peso", "Thailand Baht"))
ADFF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic)
FullADF <- bind_cols(names, ADFF)
View(FullADF)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
#Reading in the data
library(tseries)
adfInd <- adf.test(pdata$rexIND, alternative = "stationary", k=0)
adfInd #Indian Rupee
adfLNK <- adf.test(pdata$rexLNK, alternative = "stationary", k=0)
adfLNK
adfMAL <- adf.test(pdata$rexMAL, alternative = "stationary", k=2)
adfMAL # Ringgit
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK
library(tidyverse)
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
g <- rex_line_plot(ind)
g <- rex_line_plot(ind)
g
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
e <- plot_rex(pdata$ENTRY,pdata$rexIND)
e
e <- plot_rex(pdata$ENTRY,pdata$rexPHL)
e
View(phl)
View(ind)
e <- plot_rex(pdata$ENTRY,pdata$rexMAL)
e
e <- plot_rex(pdata$ENTRY,pdata$rexLNK)
e
e <- plot_rex(pdata$ENTRY,pdata$rexMNR)
e
View(mnr)
e <- plot_rex(pdata$ENTRY,pdata$rexPHL)
e
mnr <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mnr.dat")
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = case_when(row_number() == 204 ~ 15.45, TRUE ~ MNREX)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(rexMNR)
view(rexMNR)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = case_when(row_number() == 204 ~ 15.45, TRUE ~ MNREX)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
view(rexMNR)
mnr <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mnr.dat")
View(mnr)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 204, 15.45)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(rexMNR)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 204, 15.45)) #%>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(rexMNR)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 15.45)) #%>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(mnr)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 15.45)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(rexMNR)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 16.45)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(rexMNR)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 15.45)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(rexMNR)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 16.55)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(rexMNR)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 16.5)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(ENTRY, rexMNR)
View(rexMNR)
rexPHL <- phl %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(PHLEX = replace(PHLEX, 213, 7.7)) %>% mutate(rexPHL = real_exchange(PHLEX, PHLCPI, USCPI)) %>% select(rexPHL)
View(rexPHL)
# libraries
library(tidyverse)
# reading in data
ind <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/ind.dat")
lnk <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/lnk.dat")
mal <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mal.dat")
mnr <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/mnr.dat")
pak <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/pak.dat")
phl <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/phl.dat")
thi <- read_table("C:/Users/Cassandra/OneDrive/Documents/2021 Academics/Metrics/Time Series Project/R stuffs/Write_Up/data/files/thi.dat")
# adding in a column to each data set for the real exchange rate
rexIND <- ind %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexIND = real_exchange(INDEX, INDCPI, USCPI)) %>% select(ENTRY, rexIND)
rexLNK <- lnk %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexLNK = real_exchange(LNKEX, LNKCPI, USCPI)) %>% select(rexLNK)
rexMAL <- mal %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexMAL = real_exchange(MALEX, MALCPI, USCPI)) %>% select(rexMAL)
rexMNR <- mnr %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(MNREX = replace(MNREX, 203, 16.5)) %>% mutate(rexMNR = real_exchange(MNREX, MNRCPI, USCPI)) %>% select(rexMNR) #replaced the value for the exchange rate for 1974:11 with 16.5 (was 1.45)
rexPAK <- pak %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexPAK = real_exchange(PAKEX, PAKCPI, USCPI)) %>% select(rexPAK)
rexPHL <- phl %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(PHLEX = replace(PHLEX, 213, 7.7)) %>% mutate(rexPHL = real_exchange(PHLEX, PHLCPI, USCPI)) %>% select(rexPHL) #replaced the value for the exchange rate for 1975:09 with 7.7 (was 0.7)
rexTHI <- thi %>% mutate(ENTRY = as.factor(ENTRY)) %>% mutate(rexTHI = real_exchange(THIEX, THICPI, USCPI)) %>% select(rexTHI)
# binding the columns together for a panel data setof real exchange rates
pdata <- bind_cols(rexIND,rexLNK, rexMAL, rexMNR,  rexPAK,  rexPHL,  rexTHI)
view(pdata)
e <- plot_rex(pdata$ENTRY,pdata$rexPHL)
e
e <- plot_rex(pdata$ENTRY,pdata$rexMNR)
e
adfInd <- adf.test(pdata$rexIND, alternative = "stationary", k=0)
adfInd #Indian Rupee
adfLNK <- adf.test(pdata$rexLNK, alternative = "stationary", k=0)
adfLNK #Sri Lanka Rupee
adfMAL <- adf.test(pdata$rexMAL, alternative = "stationary", k=2)
adfMAL # Malaysian Ringgit
adfMNR <- adf.test(pdata$rexMNR, alternative = "stationary", k=0)
adfMNR #Myanmar Kyat
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK$statistic #Pakistani rupee
adfPHL <- adf.test(pdata$rexPHL, alternative = "stationary", k=0)
adfPHL #Phillipine peso
adfTHI <- adf.test(pdata$rexTHI, alternative = "stationary", k=1)
adfTHI #Thailand Baht
names <- data.frame("countries" = c("India Rupee", "Sri Lanka Rupee", "Malaysia Ringgit", "Myanmar Kyat", "Pakistan Rupee", "Phillipines Peso", "Thailand Baht"))
ADFF <- bind_rows(adfInd$statistic, adfLNK$statistic, adfMAL$statistic,
adfMNR$statistic, adfPAK$statistic, adfPHL$statistic, adfTHI$statistic)
FullADF <- bind_cols(names, ADFF)
View(FullADF)
adfMNR#Myanmar Kyat
View(adfMNR)
View(adfMNR)
View(adfMNR)
View(A)
View(FullADF)
# runs.test(ind, alternative, threshold, pvalue, plot)
rand_test(dfplot$rex, "t", threshold = mean(dfplot$rex))
# runs.test(ind, alternative, threshold, pvalue, plot)
rand_test(rexIND)
View(dfplot)
View(pdata)
# runs.test(ind, alternative, threshold, pvalue, plot)
rand_test(pdata$rexIND)
rand_test(pdata$rexMNR)
rand_test(pdata$rexTHI)
rand_test(pdata$rexPAK)
rand_test(pdata$rexIND, "t", threshold = mean(pdata$rexIND))
rand_test(pdata$rexIND, "t", threshold = median(pdata$rexIND))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.25))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.65))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.6))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.4))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.3))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.75))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.4))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.9))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, 0.1))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, probs = 0.1))
rand_test(pdata$rexIND, "t", threshold = quantile(pdata$rexIND, probs = 0.5))
rand_test(pdata$rexIND, "t", threshold = median(pdata$rexIND))
library(plm)
cips <- cipstest(
pdata2,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE,
)
View(pdata2)
View(pdata3)
View(pdata1)
View(pdata1)
pseries <- pdata1 %>% select(-Country)
View(pseries)
cips <- cipstest(
pseries,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE,
)
View(pdata1)
View(pdata2)
View(pdata3)
cips <- cipstest(
pdata3,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE,
)
View(pdata3)
cips <- cipstest(
pdata3,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE,
)
cips <- cipstest(
pdata3,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
View(pdata1)
View(pdata)
cips <- cipstest(
pdata,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pdata$index <- 1:nrow(pdata)
View(pdata)
pdata <- pdata %>% select(-index)
View(pdata)
index <- 1:nrow(pdata)
index <- col(1:nrow(pdata))
index <- data.frame("index" = c(1:nrow(pdata))
index <- data.frame("index" = c(1:nrow(pdata)))
index <- data.frame(index = c(1:nrow(pdata)))
View(index)
pseries <- bind_cols(index, pdata)
View(pseries)
dat <- pdata %>% select(-ENTRY)
pseries <- bind_cols(index, dat)
View(pseries)
cips <- cipstest(
pseries,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pseries <- pdata.frame(pseries)
View(pseries)
pseries <- pdata.frame(dat)
View(pseries)
p <- pseries$rexIND
cips <- cipstest(
p,
lags = "AIC",
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
pseries,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, fig.width = 6, fig.height = 5, fig.pos="H", fig.pos = 'H')
# Note: Include = FALSE implies the code is executed, but not printed in your pdf.
# warning and message = FALSE implies ugly messages and warnings are removed from your pdf.
# These should be picked up when you execute the command chunks (code sections below) in your rmd, not printed in your paper!
library(tidyverse)
library(tseries)
adfInd <- adf.test(pdata$rexIND, alternative = "stationary", k=0)
adfInd #Indian Rupee
adfLNK <- adf.test(pdata$rexLNK, alternative = "stationary", k=0)
adfLNK
adfMAL <- adf.test(pdata$rexMAL, alternative = "stationary", k=2)
adfMAL # Ringgit
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK
adfPAK <- adf.test(pdata$rexPAK, alternative = "stationary", k=0)
adfPAK
list.files('code/', full.names = T, recursive = T) %>% as.list() %>% walk(~source(.))
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(ENTRY)
pdata1 <- pdata %>% tidyr::gather(Country, rex, -ENTRY) %>%
arrange(Country)
view(pdata1)
pdata2 <- pdata %>% select(-ENTRY)
view(pdata2)
pdata3 <- pdata1 %>% select(-ENTRY, -Country)
view(pdata3)
A <- ADF(pdata, 8)
A
View(pdata2)
A <- purtest(pdata2, exo = "intercept", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
View(pdata2)
View(pdata)
View(pdata1)
dm <- pdata2 %>% mutate(rowMeans(pdata2))
View(dm)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2))
View(dm)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% replace(pdata2 == pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% replace(pdata2, pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(pdata2, pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(pdata2, pdata2 = pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(pdata2 = pdata2 - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% recode(rexIND = rexIND - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
A <- purtest(dm, exo = "intercept", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
cips <- cipstest(
dm,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips
pseries <- pdata.frame(dm)
p <- pseries$rexIND
cips <- cipstest(
dm,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pseries <- bind_cols(index, dm)
dm <- pdata2 %>% mutate(mean = rowMeans(pdata2)) %>% mutate(rexIND = rexIND - mean, rexLNK = rexLNK - mean, rexMAL = rexMAL - mean, rexMNR = rexMNR - mean, rexPAK = rexPAK - mean, rexPHL = rexPHL - mean, rexTHI = rexTHI - mean) %>% select(-mean)
A <- purtest(dm, exo = "trend", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = 1, pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = "AIC", pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
A <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
A <- purtest(pdata, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A <- purtest(pdata2, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
View(pdata)
View(pdata1)
pseries <- pdata.frame(pdata1)
pseries <- pdata.frame(pdata1, index = c("ENTRY", "Country"), drop.index = TRUE, row.names=TRUE)
View(pseries)
head(attr(pseries, "index"))
p <- head(attr(pseries, "index"))
View(p)
p <- pseries$rex
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
View(pseries)
# pseries <- bind_cols(index, dm)
pseries <- pdata.frame(pdata1, index = c("Country", "ENTRY"), drop.index = TRUE, row.names=TRUE)
View(pseries)
p <- pseries$rex
cips <- cipstest(
p,
lags = 2,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips
cips <- cipstest(
p,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
pseries,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
View(pdata2)
cips <- cipstest(
p,
lags = 0,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = TRUE
)
cips <- cipstest(
p,
lags = 1,
type = "trend",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
cips <- cipstest(
p,
lags = 1,
type = "none",
#type = c("trend", "drift", "none"),
model = "dmg",
#model = c("cmg", "mg", "dmg"),
truncated = FALSE
)
A <- purtest(dm, exo = "intercept", test = "ips" , lags = 0, pmax = 10, ips.stat = "tbar")
A
View(ADFF)
View(FullADF)
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "tbar")
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10)
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10)
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "Ztbar")
A
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "Ztbar")
A
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "tbar")
A <- purtest(dm, exo = "intercept", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat = "Wtbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Wtbar")
A
A <- purtest(dm, exo = "trend", test = "ips" , lags = c(0, 0, 1, 0, 0, 0, 1), pmax = 10, ips.stat ="Ztbar")
A
